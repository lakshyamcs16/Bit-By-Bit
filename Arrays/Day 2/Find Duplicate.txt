public class Solution {
    // DO NOT MODIFY THE LIST
    public int repeatedNumber(final List<Integer> a) {
        int n = a.size();
        int count[] = new int[n];
        
        for(int i=0; i<n; i++) {
            int el = a.get(i);
            count[el]++;
            
            if(count[el] > 1)
                return el;
        }
        
        return -1;
    }
}


Alternatively

//Explanation at http://interviewbitsolution.blogspot.com/2016/09/find-duplicate-in-array.html


int Solution::repeatedNumber(const vector<int> &A) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
  
    int slow = A[0];
  int fast = A[A[0]];
  while (slow != fast) {
    slow = A[slow];
    fast = A[A[fast]];
  }

  fast = 0;
  while (slow != fast) {
    slow = A[slow];
    fast = A[fast];
  }
  if(slow==0) return -1;
  return slow;

}

